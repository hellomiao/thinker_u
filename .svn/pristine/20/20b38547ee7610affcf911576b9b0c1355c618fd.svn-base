<?php

namespace app\home\controllers;

use Yii;
use app\home\models\Goods;
use app\home\models\searchs\GoodsSearch;
use app\base\lib\Utils;
use yii\widgets\ActiveForm;
use app\home\components\BaseController;
use yii\web\NotFoundHttpException;


/**
 * GoodsController implements the CRUD actions for Goods model.
 */
class GoodsController extends BaseController
{

    /**
     * Lists all Goods models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new GoodsSearch();
        $params = Yii::$app->request->queryParams;
        $params['platform_id'] = $this->platform_id;
        $dataProvider = $searchModel->search($params);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Goods model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Goods model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Goods();

        if ($model->load(Yii::$app->request->post())) {
            $ret=ActiveForm::validate($model);
           if (!$this->commit) {
                return $ret;
            }else{
               $model->platform_id = $this->platform_id;
                $model->save();
                $msg ="添加货物[{$model->name}]成功";
                Utils::adminLog('create',$msg);
                return ['status'=>true,'message'=>$msg];
             }
         } else {
              return $this->render('create', [
                 'model' => $model,
              ]);
         }
    }

    /**
     * Updates an existing Goods model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post())) {
             $ret=ActiveForm::validate($model);
             if (!$this->commit) {
                 return $ret;
             }else{
                $model->save();
                $msg ="编辑货物[{$model->name}]成功";
                Utils::adminLog('update',$msg);
                return ['status'=>true,'message'=>$msg];
            }
        } else {
            return $this->render('update', [
                'model' => $model,
           ]);
        }
    }

    /**
     * Deletes an existing Goods model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $model=$this->findModel($id);
        $model->delete();
        $msg ="删除货物[{$model->name}]成功";
        Utils::adminLog('delete',$msg);
        return ['status'=>true,'message'=>$msg];
    }

    /**
     * Finds the Goods model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Goods the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Goods::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
