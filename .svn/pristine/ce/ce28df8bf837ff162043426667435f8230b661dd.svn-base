<?php

namespace app\home\controllers;

use app\home\models\Delivery;
use app\home\models\DeliveryLocations;
use app\home\models\Driver;
use app\home\models\DriverClock;
use app\home\models\DriverClockList;
use Yii;
use app\home\models\DriverClockTotal;
use yii\data\ActiveDataProvider;
use app\base\lib\Utils;
use yii\widgets\ActiveForm;
use app\home\components\BaseController;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * ClockTotalController implements the CRUD actions for DriverClockTotal model.
 */
class ClockTotalController extends BaseController
{

    /**
     * Lists all DriverClockTotal models.
     * @return mixed
     */
    public function actionIndex()
    {
        $dataProvider = new ActiveDataProvider([
            'query' => DriverClockTotal::find()->where(['platform_id' => $this->platform_id]),
        ]);
        $dataProvider->sort->defaultOrder = ['clock_date' => SORT_DESC];
        return $this->render('index', [
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionList($date)
    {


        $dataProvider = new ActiveDataProvider([
            'query' => DriverClockList::find()->where(['platform_id' => $this->platform_id, 'clock_date' => $date])
        ]);


        return $this->render('list', [
            'dataProvider' => $dataProvider,
            'date' => date("Y年m月d日", strtotime($date)),
        ]);
    }


    public function actionMap($id)
    {
        $list = DriverClockList::findOne($id);


        $driver=Driver::findOne($list->driver_id);
        $time1=strtotime($list->clock_date.' 00:00:00');
        $time2=strtotime($list->clock_date.' 24:00:00');
        $data = [];
        $listTmp = DeliveryLocations::find()->where(['platform_id' => $this->platform_id, 'driver_id' => $driver->user_id])
            ->andWhere(['>=','created_at',$time1])->andWhere(['<','created_at',$time2])->all();
//        if ($list->in_longitude) {
//            $data['location'][0] = [$list->in_longitude, $list->in_latitude];
//        }
        foreach ($listTmp as $key => $val) {

            $data['location'][] = [
                $val->longitude,
                $val->latitude
            ];
        }
//        if ($list->out_longitude) {
//            $data['location'][] = [$list->out_longitude, $list->out_latitude];
//        }
//        print '<pre>';
//        print_r($data);
//        print '</pre>';
        return $this->render('map', $data);

    }


}
